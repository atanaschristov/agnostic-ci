name: Publish

on:
   workflow_dispatch:
      inputs:
         version:
            description: 'Version number for this publish (e.g. 1.2.3)'
            required: true
            type: string
         node-version:
            description: 'Node.js version to use'
            default: '24'
            required: false
            type: string
jobs:
   publish:
      runs-on: ubuntu-latest

      steps:
         - name: Checkout repository
           uses: actions/checkout@v4

         - name: Use Node.js ${{ inputs.node-version }}
           uses: actions/setup-node@v4
           with:
              node-version: ${{ inputs.node-version }}
              cache: npm

         - name: Download library artifact
           id: download
           uses: actions/github-script@v7
           with:
              github-token: ${{ secrets.GITHUB_TOKEN }}
              script: |
                 const version = `v${{ github.event.inputs.version }}`;
                 const { data: release } = await github.rest.repos.getReleaseByTag({
                     owner: context.repo.owner,
                     repo: context.repo.repo,
                     tag: version,
                 });

                 const asset = release.assets.find(a => a.name.startsWith('build-') && a.name.endsWith('.zip'));
                 if (!asset) {
                     core.setFailed(`No library asset found for ${version}`);
                     return;
                 }

                 const resp = await github.request({
                     url: asset.url,
                     headers: { Accept: 'application/octet-stream' },
                 });

                 const fs = require('fs');

                 fs.writeFileSync(asset.name, Buffer.from(resp.data));
                 core.setOutput('file', asset.name);

         - name: Extract library
           run: |
              unzip -o ${{ steps.download.outputs.file }} -d lib

         - name: Extract library
           env:
              NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
           run: |
              cd lib
              npm config set //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
              npm pack --dry-run
              # npm publish --access public
